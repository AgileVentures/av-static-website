Hmm, so I think I lost yesterday's blog in a computer crash.  Guess I'll have to remember to commit more often and also work out some way to get a new computer.  Yesterday's blog was all about getting set so that AgileVentures OAuth signups via GitHub and Google also take through the email consent setting.  A nice test driven blog and all, oh well.  I've got it working for a hard coded addition to the oauth URLs, and I'm thinking the only way to have this all work is some javascript attached to the checkbox, so that when someone clicks the checkbox that the url for the Oauth is updated to include the relevant parameter.  It's that or adjust the Oauth sign up mechanism to be part of the main sign up form so that all the form parameters are available on Oauth signup.  

The JavaScript fix will involve javascript enabled capybara tests and might demand jasmine tests.  The form approach would not have to involve javascript, but risks more going wrong with the Oauth signup as it involves more changes to the existing Oauth signup pathways ... to be honest right now I'd rather work on the NHSwiki dockerfile deploy, where I have a new lead about how to make progress by using the dokku-mysql plugin.  

Thinking it over if we make the Oauth buttons part of the form, we'd have to use JavaScript to check which button presses are occurring, stop the form default submit action and submit to a different endpoint ... ah, but maybe not - perhaps we can use `formaction`:

https://css-tricks.com/separate-form-submit-buttons-go-different-urls/

Although I get distracted for fifteen minutes setting up "go to definition" for Ruby in vscode:

https://github.com/rubyide/vscode-ruby/issues/39#issuecomment-389798580

The Oauth buttons in WSO are currently generated by this helper method in `application_helper.rb`:

```rb
  def social_button(provider, options={})
    provider = provider.downcase

    options[:url] = root_path unless options[:url].present?

    text = options[:text] || (options[:delete] ? 'Remove' : prefix)
    path = options[:delete] ? "/auth/destroy/#{current_user.authentications.where(provider: provider).first.id}" :
        "/auth/#{provider}?origin=#{CGI.escape(options[:url].gsub(/^[\/]*/, '/'))}&user[receive_mailings]=true"

    raw <<-HTML
    <div data-no-turbolink>
      <a class="btn btn-block btn-social btn-#{provider} #{options[:extra_class]}"  #{'method="delete" ' if options[:delete]}href="#{path}">
        <i class="fa fa-#{FA_ICON[provider]}"></i> #{text} #{DISPLAY_NAME[provider]}
      </a>
    </div>
    HTML
  end
```

Does anyone ever logout through these buttons?  Is this delete option actually needed?  But maybe we could just change this a `href` to a button `formaction`?
