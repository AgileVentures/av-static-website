---
title: MultiDimensional Learning Economics
date: 2016-10-11
tags: XML hub simplify eliminate automate delegate heroku pr travis deploy
author: Sam Joseph
---

Had dinner with a couple of friends recently and one of them was telling us about how he'd managed to switch to a three day week. Largely through being a freelancer working on lucrative Clojure jobs.  It sounded pretty damn awesome.  Ironically here I am doing a solid five day week for negative income.  My friend is pretty skilled in Ruby on Rails, but he really wanted to do more data science, and so learned Clojure and hasn't looked back.  It's funny because I have a machine learning background and there's been times where I've been totally absorbed by data-analysis, but at the moment I just love Ruby (and JavaScript) and I love building things that you can interact with in real time, and potentially solve immediate logistical problems for a business.

Of course data science can be really interactive, and can solve even bigger issues for businesses, charities and everyday folks; but it tends to be light on the user experience side, although even then, my friend was telling me about how one group he was working with was using big data to work out how to insert the point at which a web system suggested the user upgrade to premium.  If that's not relevant to the day to day of AgileVentures then I don't know what is :-) I guess the difference is whether you're doing that, and just that, for some other group running a for-profit closed-source system; or, like me, you're also trying to do all the devops on a non-profit, open-sourced system like AgileVentures.  Michael and I both look forward to being able to do further analysis on the pairing data and other streams coming out of AgileVentures, but there's a lot of manual coding that gets in the way.

This week we're taking a break from pairing.  My knee is pretty painful, and there's an admin backlog and this rails remote conference talk to give.  What did I do in my day without pairing?  I created to SPOCs (Small Private Online Classes) i.e. clones of the "Agile Development using Ruby on Rails" MOOC for instructors in the US and Brazil.  I had the "eliminate, simplify, delegate, automate" phrase going round in my head.  I knew that there was an element that I could automate that would involve manipulating some XML archives.  I didn't feel like getting into it. Is that a good metric? Or sloppy thinking?  I err'd on the side that if I wasn't feeling enthusiastic about XML manipulation then I probably wouldn't do a good job, and it was connected to a bigger task about MOOC merging that I would need to do in January, so I'd probably be more enthusiastic about it then.  Besides, no on apart from me would get excited about that automation now, so I pushed on.  It was two MOOCs.  It took a minute to do the manual updates.  I did update the code though so that the URL of the course was spat out correctly - that'll save me a few minutes over the next few months.

I pushed on, got the materials from the Mentive class pushed up onto my github:

* https://github.com/tansaku/learner_dictionary
* https://github.com/tansaku/learner_dictionary_rails

Found that I could use `hub create` from the command line to create the new repos without having to go to the GitHub Web UI - that'll save me a few minutes over the next year, although to make it work I had to burn some time re-authenticating with GitHub locally.  I also reviewed slack, email, commented on various tickets in pivotal tracker and github raised my premium AV members.  I iterated on a couple of asynchronous votes and was pleased to see more movement on the websiteone tickets now that we onboarded a couple of new premium members to that project.

I dithered over a PR on LocalSupport - should I push in some changes directly?  Should I list out all the changes I might make?  Would that be too aggressive and burdensome for the new bootcamp graduate who was submitting the PR?  I asked and got the answer later in the day that I should make the changes myself - will try to do that today.  I also realised I needed to update heroku authentication for travis on LocalSupport, but I knew I was putting off working on the talk I'm giving for Rails Remote conference.  There's always station keeping for projects, but this talk on learning via pull-requests needed to be prepared early so I could practice and get feedback.  I went through the slides, tried to improve them and shared them with our premium group, getting some great feedback from Pat.

I was into the time that I might usually be pairing with Michael.  I took a breather after the slides, and greeted new folks in our #general channel, replied to some emails, and then got down to trying to fix out LocalSupport automated deploys to heroku.  I had worked out previously that it was likely we needed to update the auth token in travis.  I had to install the Travis gem in LocalSupport in order to regenerate the token, but then the install failed in Travis CI itself.  I ended up breaking through by removing the travis gem and just checking in the authentication change.  Travis gem in a project breaks travis?  Kind of meta :-)

I thought a similar issue might be affecting our automated PR deploys on WebSiteOne AND LocalSupport, but for some reason the automated deploys on LocalSupport were off.   They were on on WSO, but not happening.  I kicked some off manually, and switched them on on LocalSupport.  The Heroku PR automated deploy is way cool, but temperamental. To be fair due to Heroku's ninja charging changes recently we've been switching accounts and that may have something to do with it.

I didn't get down to any serious coding, but did manage to get through a set of important devops stuff.  I ran the "Kent Beck" scrum and was really pleased to catch up with Sigu, who's running a coding bootcamp in Kenya.  He tells me that the students pay $60 for the 3 month course on Ruby and Rails.  He's planning a meetup for all this students past, present and future, and hoping to run through some basic ruby stuff, 3rd party APIs etc. and he asked if I would make an intro video for him, which I totally will.  It's staggering to think that people pay $10000+ or so for coding bootcamps in the US and Europe.

So I think I managed to create a few minor efficiencies that will save me time over the coming months, but I don't suspect I'll get down to a three-day week any time soon.  Particularly when there are initiatives like Sigu's to support in Kenya.  Students there are the ones that AgileVentures fellowship program could really help.  I'd love to give all those Kenyan students AgileVentures premium support, like we do for CraftAcademy students from Sweden.  I really need to build out our fellowship materials and payment framework.  Sod the three-day week, there's a world to change here!