So I'd made a plan for this morning.  I was going to quickly check if we had progress on our IE11 VisualEditor/Moderation problems; get the final report written up for the NHS folks, and then try to get into rebuilding our complete wiki stack on a staging instance to have it all documented and somewhere to test changes before they go into production.  I'm still hoping that'll all get done.  There was an [update on our IE11 VisualEditor/Moderation problem](https://github.com/edwardspec/mediawiki-moderation/issues/9#issuecomment-301893840) which seemed like it could be the final fix, so I pushed it into production to find it was a partial fix.  The moderation messages now show up on IE11, but the visual editor still wouldn't fully load, argh!

It took 30 minutes or so of fiddling on my windows machine to get all the errors recorded and noted in the GitHub issue, and now I'm finally at my blog, and the plan basically seems sound.  It's frustrating that it's not the 'final' fix, because if the Visual Editor had just loaded then that would have been our last major technical hurdle out of the way, and it would have made decisions about which editor to default to easy to make.  Actually for all the effort to get the moderation messages to show up on IE11, it's clear from the lastest round of usability-testing/training at the NHS that even when the moderation message is present, that users just don't read it.  I'm guessing that the addition of some kind of icon might be helpful and I opened an [issue on the moderation extension](https://github.com/edwardspec/mediawiki-moderation/issues/12) to discuss that.

The final NHS training session went well yesterday, and it turned out that part of this was because the trainee was using Chrome.  Still it's clear to me that most users will just think their edit is lost, or the system is somehow broken, because just going in to edit they won't have any mental model of the moderation process and they won't read the moderation message, which has a green tick next to it and so they will just assume their edit has been saved.

![popup](https://www.dropbox.com/s/6o6w0elykokw0zh/Screenshot%202017-05-11%2017.46.02.png?dl=1)

What continues to shock me is that more people aren't more interested in these usability issues.  Maybe being in a community that is all about learning to code, learning to be agile is the wrong place.  There was a point a few years ago where I was trying to help start a community around Scott Klemmer's HCI usability course.  There clearly are people really interested in usability, but so often the coding conversations go towards code beauty, or database consistency, and those critical steps of building something that people can fit into their existing workflow and derive value from get lost in the cracks.  Maybe I'm delusional but we all seem to be labouring under the assumption that other people basically understand what we understand.  I'm often going on about how that is such a hard assumption to break, so I guess I shouldn't be surprised.

What is exciting is the enthusiasm for design sprints that we're starting to have in the AV community.  I'm starting to see the design sprint as a tool for lasering in on breaking down those assumptions.  Let's see.  Right a little less conversation, a little more action; sort of.  Do my email/slack check, get final draft of final report for NHS and get that staging stack set up before I end up breaking something on the production system.  Again, why aren't more of the community interested in the devops for this paid NHS project?  It's the usability and the devops that's key. Can't deliver the system in the fashion intended and fit it into the user's daily workflow and you might as well be throwing all your code in a dumpster.  Great if you're into abstract art - insane if your intention is help people or change anything.  Maybe I'm just failing to communicate the value, or people won't want to get more involved until we're paying them bigger bucks ...?
