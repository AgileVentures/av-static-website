---
title: Rich Tapestry
date: 2017-05-08
tags: blogging, titles, devops, MediaWiki, Apache, Parsoid, SSL, NHS, design sprint, prototype, training
author: Sam Joseph
---

![rich_tapestry](/images/rich_tapestry.jpg)

My brain was grabbling at titles for the blog/branch--"webs we weave", "elephants all the way down".  After nearly a year of blogging there's a haze about which expressions I've used already and how well they express what I'll end up blogging about.  Not that titles can't or don't change through the subsequent editing process.  Last week was characterised by a series of edge of the seat DevOps activities.  Do I mean DevOps?  I guess I just mean installation of different components of the NHS wiki software.  One could characterise them as just part of the MediaWiki install process.  Looking back at them being all done it can be laid out as fairly straightforward, but any one of them could have turned out to be insoluble in the time available; and really I was pulling time out of other activities to sort the Apache, Parsoid and SSL configurations.

The system is live at [https://wiki.healthylondon.org](https://wiki.healthylondon.org) and it loaded a bit sluggishly this morning, reloads were pretty prompt, and the Visual Editor is still working with the SSL.  After previous forays to get the Visual Editor working (Monday?) and SSL installed (Thursday?), it turned out that the Visual Editor wouldn't play well with the SSL.  It's difficult to say whether the Visual Editor is a "nice to have" or a "must have", but losing it would have been a shame.  In total it took only about forty minutes to fix the Visual Editor to work with SSL on Friday.  It works with SSL on the main Wikipedia site, so my efforts were heartened by the idea that it was at least in principle possible to get it working.  However, hosting on Azure could have made it arbitrarily difficult to come up with a solution in a reasonable amount of time, and indeed I found several plaintive posts from people getting stuck on this, and those posts had no solution responses.

Again being with MediaWiki means we have an extensive online community and googling error messages gives leads pretty readily, but there was no "out of the box" solution that I could easily find.  In the end it took a reasoned analysis of the way the Parsoid system works.  The Visual Editor is a plugin that works within MediaWiki, but it needs to be able to translate pages from its own format to the MediaWiki syntax.  This used to be done via PHP script, but is now a stand alone node service (microservice).  Parsoid needs to be able to talk to the MediaWiki API and MediaWiki needs to be able to talk to the Parsoid service when starting up the Visual Editor.  The new SSL endpoints meant that the MediaWiki could no longer reach the Parsoid service.  I'd like to give a more detailed walkthrough of the errors encountered etc., but I'm feeling pretty run down today and there's a lot to get on to.  The executive summary is that I had to configure an additional virtual host in Apache to redirect through the security layer so that the Mediawiki Visual Editor pages could access Parsoid.  It also required opening an additional port in the Azure system.

What I'd really like to do now is spend a full day re-creating the whole installation on a fresh Azure/Bitnami installation - documenting as I go.  However I've got a meeting today and most days this week, getting together with other stakeholders the NHS has put me in touch with.  This is going to be, sort of, the final section of the design sprint, where I try to observe end user reactions to the "prototype" we've created.  On the technical side I need to check on the backup solution we've implemented, and it occurs to me that we could get the MediaWiki edits we're making into git or some other versioning system.  There's also replying to the lawyers about the updates to the terms & conditions, preparing for a revised training session tomorrow (do we drop the ConfirmAccount plugin?), etc., etc.  From the design sprint perspective I guess I should focus on getting the look and feel finished to see end user reactions to that.

Okay, so the plan is:

1. Check the backups are working  
2. Focus on the look and feel  
3. Start seeing the stakeholders  

Hopefully I can follow up with a full documentation of the install process, which might also make me less of a single point of failure if we have an issue with the configuration.  That said, I would ideally be doing the look and feel update on a staging instance; so maybe I can't get out of replicating the setup?  Of course the faster option is to just try design changes on the existing out of step staging instance we currently have.  Gah!  Life's rich tapestry indeed ... I'm going to make some coffee ...
